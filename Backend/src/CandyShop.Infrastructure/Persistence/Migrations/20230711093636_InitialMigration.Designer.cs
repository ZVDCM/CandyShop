// <auto-generated />
using System;
using CandyShop.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CandyShop.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230711093636_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandyShop.Domain.Entities.Candies.Candy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Candies");
                });

            modelBuilder.Entity("CandyShop.Domain.Entities.Carts.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bc47443-225e-46d7-a384-8e92025b51c6"),
                            UserAddress = "Angeles City, Pampanga, Philippines",
                            UserEmail = "Juan.DelaCruz@gmail.com",
                            UserId = new Guid("938a3985-2256-474d-bf3f-a9b398e35afb"),
                            UserName = "Juan Dela Cruz"
                        });
                });

            modelBuilder.Entity("CandyShop.Domain.Entities.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938a3985-2256-474d-bf3f-a9b398e35afb"),
                            Address = "Angeles City, Pampanga, Philippines",
                            Email = "Juan.DelaCruz@gmail.com",
                            Name = "Juan Dela Cruz"
                        });
                });

            modelBuilder.Entity("CandyShop.Domain.Entities.Candies.Candy", b =>
                {
                    b.OwnsOne("CandyShop.Domain.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("CandyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("CandyId");

                            b1.ToTable("Candies");

                            b1.WithOwner()
                                .HasForeignKey("CandyId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("CandyShop.Domain.Entities.Carts.Cart", b =>
                {
                    b.HasOne("CandyShop.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CandyShop.Domain.ValueObjects.Money", "TotalPrice", b1 =>
                        {
                            b1.Property<Guid>("CartId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("CartId");

                            b1.ToTable("Carts");

                            b1.WithOwner()
                                .HasForeignKey("CartId");

                            b1.HasData(
                                new
                                {
                                    CartId = new Guid("8bc47443-225e-46d7-a384-8e92025b51c6"),
                                    Currency = "PHP",
                                    Value = 0m
                                });
                        });

                    b.OwnsMany("CandyShop.Domain.Entities.Carts.LineItems.LineItem", "LineItems", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("CandyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CandyImage")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CandyName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("CandyQuantity")
                                .HasColumnType("int");

                            b1.Property<Guid>("CartId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("IsDisabled")
                                .HasColumnType("bit");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("CandyId");

                            b1.HasIndex("CartId");

                            b1.ToTable("LineItem");

                            b1.HasOne("CandyShop.Domain.Entities.Candies.Candy", null)
                                .WithMany()
                                .HasForeignKey("CandyId")
                                .OnDelete(DeleteBehavior.NoAction);

                            b1.WithOwner()
                                .HasForeignKey("CartId");

                            b1.OwnsOne("CandyShop.Domain.ValueObjects.Money", "CandyPrice", b2 =>
                                {
                                    b2.Property<Guid>("LineItemId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<decimal>("Value")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("LineItemId");

                                    b2.ToTable("LineItem");

                                    b2.WithOwner()
                                        .HasForeignKey("LineItemId");
                                });

                            b1.OwnsOne("CandyShop.Domain.ValueObjects.Money", "Price", b2 =>
                                {
                                    b2.Property<Guid>("LineItemId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<decimal>("Value")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("LineItemId");

                                    b2.ToTable("LineItem");

                                    b2.WithOwner()
                                        .HasForeignKey("LineItemId");
                                });

                            b1.Navigation("CandyPrice")
                                .IsRequired();

                            b1.Navigation("Price")
                                .IsRequired();
                        });

                    b.Navigation("LineItems");

                    b.Navigation("TotalPrice")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
